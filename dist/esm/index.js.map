{"version":3,"file":"index.js","sources":["../../node_modules/jotai/esm/vanilla.mjs","../../src/useAtom.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["let keyCount = 0;\nfunction atom(read, write) {\n  const key = `atom${++keyCount}`;\n  const config = {\n    toString: () => key\n  };\n  if (typeof read === \"function\") {\n    config.read = read;\n  } else {\n    config.init = read;\n    config.read = (get) => get(config);\n    config.write = (get, set, arg) => set(\n      config,\n      typeof arg === \"function\" ? arg(get(config)) : arg\n    );\n  }\n  if (write) {\n    config.write = write;\n  }\n  return config;\n}\n\nconst hasInitialValue = (atom) => \"init\" in atom;\nconst isActuallyWritableAtom = (atom) => !!atom.write;\nconst cancelPromiseMap = /* @__PURE__ */ new WeakMap();\nconst registerCancelPromise = (promise, cancel) => {\n  cancelPromiseMap.set(promise, cancel);\n  promise.catch(() => {\n  }).finally(() => cancelPromiseMap.delete(promise));\n};\nconst cancelPromise = (promise, next) => {\n  const cancel = cancelPromiseMap.get(promise);\n  if (cancel) {\n    cancelPromiseMap.delete(promise);\n    cancel(next);\n  }\n};\nconst resolvePromise = (promise, value) => {\n  promise.status = \"fulfilled\";\n  promise.value = value;\n};\nconst rejectPromise = (promise, e) => {\n  promise.status = \"rejected\";\n  promise.reason = e;\n};\nconst isPromiseLike = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\nconst isEqualAtomValue = (a, b) => \"v\" in a && \"v\" in b && Object.is(a.v, b.v);\nconst isEqualAtomError = (a, b) => \"e\" in a && \"e\" in b && Object.is(a.e, b.e);\nconst hasPromiseAtomValue = (a) => \"v\" in a && a.v instanceof Promise;\nconst isEqualPromiseAtomValue = (a, b) => \"v\" in a && \"v\" in b && a.v.orig && a.v.orig === b.v.orig;\nconst returnAtomValue = (atomState) => {\n  if (\"e\" in atomState) {\n    throw atomState.e;\n  }\n  return atomState.v;\n};\nconst createStore = () => {\n  const atomStateMap = /* @__PURE__ */ new WeakMap();\n  const mountedMap = /* @__PURE__ */ new WeakMap();\n  const pendingMap = /* @__PURE__ */ new Map();\n  let storeListenersRev2;\n  let mountedAtoms;\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    storeListenersRev2 = /* @__PURE__ */ new Set();\n    mountedAtoms = /* @__PURE__ */ new Set();\n  }\n  const getAtomState = (atom) => atomStateMap.get(atom);\n  const setAtomState = (atom, atomState) => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      Object.freeze(atomState);\n    }\n    const prevAtomState = atomStateMap.get(atom);\n    atomStateMap.set(atom, atomState);\n    if (!pendingMap.has(atom)) {\n      pendingMap.set(atom, prevAtomState);\n    }\n    if (prevAtomState && hasPromiseAtomValue(prevAtomState)) {\n      const next = \"v\" in atomState ? atomState.v instanceof Promise ? atomState.v : Promise.resolve(atomState.v) : Promise.reject(atomState.e);\n      cancelPromise(prevAtomState.v, next);\n    }\n  };\n  const updateDependencies = (atom, nextAtomState, nextDependencies) => {\n    const dependencies = /* @__PURE__ */ new Map();\n    let changed = false;\n    nextDependencies.forEach((aState, a) => {\n      if (!aState && a === atom) {\n        aState = nextAtomState;\n      }\n      if (aState) {\n        dependencies.set(a, aState);\n        if (nextAtomState.d.get(a) !== aState) {\n          changed = true;\n        }\n      } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n        console.warn(\"[Bug] atom state not found\");\n      }\n    });\n    if (changed || nextAtomState.d.size !== dependencies.size) {\n      nextAtomState.d = dependencies;\n    }\n  };\n  const setAtomValue = (atom, value, nextDependencies) => {\n    const prevAtomState = getAtomState(atom);\n    const nextAtomState = {\n      d: (prevAtomState == null ? void 0 : prevAtomState.d) || /* @__PURE__ */ new Map(),\n      v: value\n    };\n    if (nextDependencies) {\n      updateDependencies(atom, nextAtomState, nextDependencies);\n    }\n    if (prevAtomState && isEqualAtomValue(prevAtomState, nextAtomState) && prevAtomState.d === nextAtomState.d) {\n      return prevAtomState;\n    }\n    if (prevAtomState && hasPromiseAtomValue(prevAtomState) && hasPromiseAtomValue(nextAtomState) && isEqualPromiseAtomValue(prevAtomState, nextAtomState)) {\n      if (prevAtomState.d === nextAtomState.d) {\n        return prevAtomState;\n      } else {\n        nextAtomState.v = prevAtomState.v;\n      }\n    }\n    setAtomState(atom, nextAtomState);\n    return nextAtomState;\n  };\n  const setAtomValueOrPromise = (atom, valueOrPromise, nextDependencies, abortPromise) => {\n    if (isPromiseLike(valueOrPromise)) {\n      let continuePromise;\n      const promise = new Promise((resolve, reject) => {\n        let settled = false;\n        valueOrPromise.then(\n          (v) => {\n            if (!settled) {\n              settled = true;\n              const prevAtomState = getAtomState(atom);\n              const nextAtomState = setAtomValue(\n                atom,\n                promise,\n                nextDependencies\n              );\n              resolvePromise(promise, v);\n              resolve(v);\n              if (mountedMap.has(atom) && (prevAtomState == null ? void 0 : prevAtomState.d) !== nextAtomState.d) {\n                mountDependencies(atom, nextAtomState, prevAtomState == null ? void 0 : prevAtomState.d);\n              }\n            }\n          },\n          (e) => {\n            if (!settled) {\n              settled = true;\n              const prevAtomState = getAtomState(atom);\n              const nextAtomState = setAtomValue(\n                atom,\n                promise,\n                nextDependencies\n              );\n              rejectPromise(promise, e);\n              reject(e);\n              if (mountedMap.has(atom) && (prevAtomState == null ? void 0 : prevAtomState.d) !== nextAtomState.d) {\n                mountDependencies(atom, nextAtomState, prevAtomState == null ? void 0 : prevAtomState.d);\n              }\n            }\n          }\n        );\n        continuePromise = (next) => {\n          if (!settled) {\n            settled = true;\n            next.then(\n              (v) => resolvePromise(promise, v),\n              (e) => rejectPromise(promise, e)\n            );\n            resolve(next);\n          }\n        };\n      });\n      promise.orig = valueOrPromise;\n      promise.status = \"pending\";\n      registerCancelPromise(promise, (next) => {\n        if (next) {\n          continuePromise(next);\n        }\n        abortPromise == null ? void 0 : abortPromise();\n      });\n      return setAtomValue(atom, promise, nextDependencies);\n    }\n    return setAtomValue(atom, valueOrPromise, nextDependencies);\n  };\n  const setAtomError = (atom, error, nextDependencies) => {\n    const prevAtomState = getAtomState(atom);\n    const nextAtomState = {\n      d: (prevAtomState == null ? void 0 : prevAtomState.d) || /* @__PURE__ */ new Map(),\n      e: error\n    };\n    if (nextDependencies) {\n      updateDependencies(atom, nextAtomState, nextDependencies);\n    }\n    if (prevAtomState && isEqualAtomError(prevAtomState, nextAtomState) && prevAtomState.d === nextAtomState.d) {\n      return prevAtomState;\n    }\n    setAtomState(atom, nextAtomState);\n    return nextAtomState;\n  };\n  const readAtomState = (atom, force) => {\n    const atomState = getAtomState(atom);\n    if (!force && atomState) {\n      if (mountedMap.has(atom)) {\n        return atomState;\n      }\n      if (Array.from(atomState.d).every(\n        ([a, s]) => a === atom || readAtomState(a) === s\n      )) {\n        return atomState;\n      }\n    }\n    const nextDependencies = /* @__PURE__ */ new Map();\n    let isSync = true;\n    const getter = (a) => {\n      if (a === atom) {\n        const aState2 = getAtomState(a);\n        if (aState2) {\n          nextDependencies.set(a, aState2);\n          return returnAtomValue(aState2);\n        }\n        if (hasInitialValue(a)) {\n          nextDependencies.set(a, void 0);\n          return a.init;\n        }\n        throw new Error(\"no atom init\");\n      }\n      const aState = readAtomState(a);\n      nextDependencies.set(a, aState);\n      return returnAtomValue(aState);\n    };\n    let controller;\n    let setSelf;\n    const options = {\n      get signal() {\n        if (!controller) {\n          controller = new AbortController();\n        }\n        return controller.signal;\n      },\n      get setSelf() {\n        if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !isActuallyWritableAtom(atom)) {\n          console.warn(\"setSelf function cannot be used with read-only atom\");\n        }\n        if (!setSelf && isActuallyWritableAtom(atom)) {\n          setSelf = (...args) => {\n            if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && isSync) {\n              console.warn(\"setSelf function cannot be called in sync\");\n            }\n            if (!isSync) {\n              return writeAtom(atom, ...args);\n            }\n          };\n        }\n        return setSelf;\n      }\n    };\n    try {\n      const valueOrPromise = atom.read(getter, options);\n      return setAtomValueOrPromise(\n        atom,\n        valueOrPromise,\n        nextDependencies,\n        () => controller == null ? void 0 : controller.abort()\n      );\n    } catch (error) {\n      return setAtomError(atom, error, nextDependencies);\n    } finally {\n      isSync = false;\n    }\n  };\n  const readAtom = (atom) => returnAtomValue(readAtomState(atom));\n  const addAtom = (atom) => {\n    let mounted = mountedMap.get(atom);\n    if (!mounted) {\n      mounted = mountAtom(atom);\n    }\n    return mounted;\n  };\n  const canUnmountAtom = (atom, mounted) => !mounted.l.size && (!mounted.t.size || mounted.t.size === 1 && mounted.t.has(atom));\n  const delAtom = (atom) => {\n    const mounted = mountedMap.get(atom);\n    if (mounted && canUnmountAtom(atom, mounted)) {\n      unmountAtom(atom);\n    }\n  };\n  const recomputeDependents = (atom) => {\n    const dependencyMap = /* @__PURE__ */ new Map();\n    const dirtyMap = /* @__PURE__ */ new WeakMap();\n    const getDependents = (a) => {\n      var _a;\n      const dependents = new Set((_a = mountedMap.get(a)) == null ? void 0 : _a.t);\n      pendingMap.forEach((_, pendingAtom) => {\n        var _a2;\n        if ((_a2 = getAtomState(pendingAtom)) == null ? void 0 : _a2.d.has(a)) {\n          dependents.add(pendingAtom);\n        }\n      });\n      return dependents;\n    };\n    const loop1 = (a) => {\n      getDependents(a).forEach((dependent) => {\n        if (dependent !== a) {\n          dependencyMap.set(\n            dependent,\n            (dependencyMap.get(dependent) || /* @__PURE__ */ new Set()).add(a)\n          );\n          dirtyMap.set(dependent, (dirtyMap.get(dependent) || 0) + 1);\n          loop1(dependent);\n        }\n      });\n    };\n    loop1(atom);\n    const loop2 = (a) => {\n      getDependents(a).forEach((dependent) => {\n        var _a;\n        if (dependent !== a) {\n          let dirtyCount = dirtyMap.get(dependent);\n          if (dirtyCount) {\n            dirtyMap.set(dependent, --dirtyCount);\n          }\n          if (!dirtyCount) {\n            let isChanged = !!((_a = dependencyMap.get(dependent)) == null ? void 0 : _a.size);\n            if (isChanged) {\n              const prevAtomState = getAtomState(dependent);\n              const nextAtomState = readAtomState(dependent, true);\n              isChanged = !prevAtomState || !isEqualAtomValue(prevAtomState, nextAtomState);\n            }\n            if (!isChanged) {\n              dependencyMap.forEach((s) => s.delete(dependent));\n            }\n          }\n          loop2(dependent);\n        }\n      });\n    };\n    loop2(atom);\n  };\n  const writeAtomState = (atom, ...args) => {\n    let isSync = true;\n    const getter = (a) => returnAtomValue(readAtomState(a));\n    const setter = (a, ...args2) => {\n      let r;\n      if (a === atom) {\n        if (!hasInitialValue(a)) {\n          throw new Error(\"atom not writable\");\n        }\n        const prevAtomState = getAtomState(a);\n        const nextAtomState = setAtomValueOrPromise(a, args2[0]);\n        if (!prevAtomState || !isEqualAtomValue(prevAtomState, nextAtomState)) {\n          recomputeDependents(a);\n        }\n      } else {\n        r = writeAtomState(a, ...args2);\n      }\n      if (!isSync) {\n        const flushed = flushPending();\n        if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n          storeListenersRev2.forEach(\n            (l) => l({ type: \"async-write\", flushed })\n          );\n        }\n      }\n      return r;\n    };\n    const result = atom.write(getter, setter, ...args);\n    isSync = false;\n    return result;\n  };\n  const writeAtom = (atom, ...args) => {\n    const result = writeAtomState(atom, ...args);\n    const flushed = flushPending();\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      storeListenersRev2.forEach(\n        (l) => l({ type: \"write\", flushed })\n      );\n    }\n    return result;\n  };\n  const mountAtom = (atom, initialDependent, onMountQueue) => {\n    var _a;\n    const queue = onMountQueue || [];\n    (_a = getAtomState(atom)) == null ? void 0 : _a.d.forEach((_, a) => {\n      const aMounted = mountedMap.get(a);\n      if (aMounted) {\n        aMounted.t.add(atom);\n      } else {\n        if (a !== atom) {\n          mountAtom(a, atom, queue);\n        }\n      }\n    });\n    readAtomState(atom);\n    const mounted = {\n      t: new Set(initialDependent && [initialDependent]),\n      l: /* @__PURE__ */ new Set()\n    };\n    mountedMap.set(atom, mounted);\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      mountedAtoms.add(atom);\n    }\n    if (isActuallyWritableAtom(atom) && atom.onMount) {\n      const { onMount } = atom;\n      queue.push(() => {\n        const onUnmount = onMount((...args) => writeAtom(atom, ...args));\n        if (onUnmount) {\n          mounted.u = onUnmount;\n        }\n      });\n    }\n    if (!onMountQueue) {\n      queue.forEach((f) => f());\n    }\n    return mounted;\n  };\n  const unmountAtom = (atom) => {\n    var _a;\n    const onUnmount = (_a = mountedMap.get(atom)) == null ? void 0 : _a.u;\n    if (onUnmount) {\n      onUnmount();\n    }\n    mountedMap.delete(atom);\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      mountedAtoms.delete(atom);\n    }\n    const atomState = getAtomState(atom);\n    if (atomState) {\n      if (hasPromiseAtomValue(atomState)) {\n        cancelPromise(atomState.v);\n      }\n      atomState.d.forEach((_, a) => {\n        if (a !== atom) {\n          const mounted = mountedMap.get(a);\n          if (mounted) {\n            mounted.t.delete(atom);\n            if (canUnmountAtom(a, mounted)) {\n              unmountAtom(a);\n            }\n          }\n        }\n      });\n    } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\"[Bug] could not find atom state to unmount\", atom);\n    }\n  };\n  const mountDependencies = (atom, atomState, prevDependencies) => {\n    const depSet = new Set(atomState.d.keys());\n    prevDependencies == null ? void 0 : prevDependencies.forEach((_, a) => {\n      if (depSet.has(a)) {\n        depSet.delete(a);\n        return;\n      }\n      const mounted = mountedMap.get(a);\n      if (mounted) {\n        mounted.t.delete(atom);\n        if (canUnmountAtom(a, mounted)) {\n          unmountAtom(a);\n        }\n      }\n    });\n    depSet.forEach((a) => {\n      const mounted = mountedMap.get(a);\n      if (mounted) {\n        mounted.t.add(atom);\n      } else if (mountedMap.has(atom)) {\n        mountAtom(a, atom);\n      }\n    });\n  };\n  const flushPending = () => {\n    let flushed;\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      flushed = /* @__PURE__ */ new Set();\n    }\n    while (pendingMap.size) {\n      const pending = Array.from(pendingMap);\n      pendingMap.clear();\n      pending.forEach(([atom, prevAtomState]) => {\n        const atomState = getAtomState(atom);\n        if (atomState) {\n          const mounted = mountedMap.get(atom);\n          if (mounted && atomState.d !== (prevAtomState == null ? void 0 : prevAtomState.d)) {\n            mountDependencies(atom, atomState, prevAtomState == null ? void 0 : prevAtomState.d);\n          }\n          if (mounted && !// TODO This seems pretty hacky. Hope to fix it.\n          // Maybe we could `mountDependencies` in `setAtomState`?\n          (prevAtomState && !hasPromiseAtomValue(prevAtomState) && (isEqualAtomValue(prevAtomState, atomState) || isEqualAtomError(prevAtomState, atomState)))) {\n            mounted.l.forEach((listener) => listener());\n            if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n              flushed.add(atom);\n            }\n          }\n        } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n          console.warn(\"[Bug] no atom state to flush\");\n        }\n      });\n    }\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      return flushed;\n    }\n  };\n  const subscribeAtom = (atom, listener) => {\n    const mounted = addAtom(atom);\n    const flushed = flushPending();\n    const listeners = mounted.l;\n    listeners.add(listener);\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      storeListenersRev2.forEach(\n        (l) => l({ type: \"sub\", flushed })\n      );\n    }\n    return () => {\n      listeners.delete(listener);\n      delAtom(atom);\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n        storeListenersRev2.forEach((l) => l({ type: \"unsub\" }));\n      }\n    };\n  };\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    return {\n      get: readAtom,\n      set: writeAtom,\n      sub: subscribeAtom,\n      // store dev methods (these are tentative and subject to change without notice)\n      dev_subscribe_store: (l, rev) => {\n        if (rev !== 2) {\n          throw new Error(\"The current StoreListener revision is 2.\");\n        }\n        storeListenersRev2.add(l);\n        return () => {\n          storeListenersRev2.delete(l);\n        };\n      },\n      dev_get_mounted_atoms: () => mountedAtoms.values(),\n      dev_get_atom_state: (a) => atomStateMap.get(a),\n      dev_get_mounted: (a) => mountedMap.get(a),\n      dev_restore_atoms: (values) => {\n        for (const [atom, valueOrPromise] of values) {\n          if (hasInitialValue(atom)) {\n            setAtomValueOrPromise(atom, valueOrPromise);\n            recomputeDependents(atom);\n          }\n        }\n        const flushed = flushPending();\n        storeListenersRev2.forEach(\n          (l) => l({ type: \"restore\", flushed })\n        );\n      }\n    };\n  }\n  return {\n    get: readAtom,\n    set: writeAtom,\n    sub: subscribeAtom\n  };\n};\nlet defaultStore;\nif ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n  if (typeof globalThis.__NUMBER_OF_JOTAI_INSTANCES__ === \"number\") {\n    ++globalThis.__NUMBER_OF_JOTAI_INSTANCES__;\n  } else {\n    globalThis.__NUMBER_OF_JOTAI_INSTANCES__ = 1;\n  }\n}\nconst getDefaultStore = () => {\n  if (!defaultStore) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && globalThis.__NUMBER_OF_JOTAI_INSTANCES__ !== 1) {\n      console.warn(\n        \"Detected multiple Jotai instances. It may cause unexpected behavior with the default store. https://github.com/pmndrs/jotai/discussions/2044\"\n      );\n    }\n    defaultStore = createStore();\n  }\n  return defaultStore;\n};\n\nexport { atom, createStore, getDefaultStore };\n","import { __spreadArray } from \"tslib\";\nimport { getDefaultStore } from 'jotai/vanilla';\nexport function useStore(options) {\n    var _a;\n    return (_a = options === null || options === void 0 ? void 0 : options.store) !== null && _a !== void 0 ? _a : getDefaultStore();\n}\nfunction useAtom(atom, options) {\n    var store = useStore(options);\n    return {\n        subscribe: function (fn) {\n            fn(store.get(atom));\n            return store.sub(atom, function () {\n                var nextValue = store.get(atom);\n                fn(nextValue);\n            });\n        },\n        update: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // @ts-ignore\n            if (import.meta.env.DEV && !('write' in atom)) {\n                // useAtom can pass non writable atom with wrong type assertion,\n                // so we should check here.\n                throw new Error('not writable atom');\n            }\n            // @ts-expect-error: TODO\n            return store.set.apply(store, __spreadArray([atom], args, false));\n        },\n    };\n}\nexport { useAtom };\n//# sourceMappingURL=useAtom.js.map","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n"],"names":["keyCount","atom","read","write","key","config","toString","init","get","set","arg","hasInitialValue","isActuallyWritableAtom","cancelPromiseMap","WeakMap","cancelPromise","promise","next","cancel","delete","resolvePromise","value","status","rejectPromise","e","reason","isEqualAtomValue","a","b","Object","is","v","isEqualAtomError","hasPromiseAtomValue","Promise","returnAtomValue","atomState","createStore","atomStateMap","mountedMap","pendingMap","Map","storeListenersRev2","mountedAtoms","env","MODE","Set","getAtomState","setAtomState","freeze","prevAtomState","has","resolve","reject","updateDependencies","nextAtomState","nextDependencies","dependencies","changed","forEach","aState","d","console","warn","size","setAtomValue","orig","setAtomValueOrPromise","valueOrPromise","abortPromise","x","then","continuePromise","settled","mountDependencies","catch","finally","registerCancelPromise","readAtomState","force","Array","from","every","s","isSync","getter","aState2","Error","controller","setSelf","options","signal","AbortController","args","writeAtom","abort","error","setAtomError","readAtom","canUnmountAtom","mounted","l","t","recomputeDependents","dependencyMap","dirtyMap","getDependents","_a","dependents","_","pendingAtom","_a2","add","loop1","dependent","loop2","dirtyCount","isChanged","writeAtomState","result","args2","r","flushed","flushPending","type","mountAtom","initialDependent","onMountQueue","queue","aMounted","onMount","push","onUnmount","u","f","unmountAtom","prevDependencies","depSet","keys","pending","clear","listener","subscribeAtom","addAtom","listeners","delAtom","sub","dev_subscribe_store","rev","dev_get_mounted_atoms","values","dev_get_atom_state","dev_get_mounted","dev_restore_atoms","defaultStore","globalThis","__NUMBER_OF_JOTAI_INSTANCES__","getDefaultStore","useStore","store","useAtom","subscribe","fn","nextValue","update","_i","arguments","length","DEV","apply","to","pack","ar","i","prototype","slice","call","concat","__spreadArray"],"mappings":"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","x_google_ignoreList":[0,2]}